name: "Build Demo Docker Image"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker Image Version'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '21'

    - name: Authenticate to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: --debug

    - name: Create Buildx Builder Instance
      run: |
        docker buildx create --name multiarch-builder --use
        docker buildx inspect --bootstrap

    - name: Cache Gradle Packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: gradle-${{ runner.os }}

    - name: Build Multi-Arch Docker Image
      run: |
        DOCKER_REPO="${{ secrets.DOCKER_USERNAME }}/ypp-rpc-demo"
        DOCKER_TAG="${{ github.event.inputs.version }}"
        DOCKER_IMAGE="$DOCKER_REPO:$DOCKER_TAG"
        echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV
        docker buildx build --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE -f Dockerfile .
      working-directory: envoy-proxy

    - name: Push Docker Image to Docker Hub
      run: |
        docker push ${{ env.image }}
